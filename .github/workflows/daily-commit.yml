name: update-daily-quote

on:
  schedule:
    - cron: '0 3 * * *' # Every day at 00:00 Brasilia time (03:00 UTC)
  workflow_dispatch:

jobs:
  update-phrase-and-pr:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pr-number }}
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.MY_PERSONAL_TOKEN }}
        fetch-depth: 0

    - name: setup node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: set branch name
      id: set-branch
      run: echo "branch_name=daily-update-$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: get daily quote
      id: get-quote
      run: |
        node -e "
          const fs = require('fs');
          const path = './frases.json';

          try {
            if (!fs.existsSync(path)) {
              throw new Error('frases.json file not found.');
            }

            const frases = JSON.parse(fs.readFileSync(path, 'utf8'));
            if (!Array.isArray(frases) || frases.length === 0) {
              throw new Error('frases.json is empty or not a valid array.');
            }

            const today = new Date();
            const dayOfYear = Math.floor((today - new Date(today.getFullYear(), 0, 0)) / 86400000);
            const quote = frases[dayOfYear % frases.length];

            if (!quote?.trim()) {
              throw new Error('Unable to get quote for the current day');
            }

            const content = quote + '\n\nUpdated on: ' + today.toLocaleString('pt-BR');
            fs.writeFileSync('frase-do-dia.txt', content, 'utf8');

            console.log('::set-output name=quote::' + quote.substring(0, 30) + (quote.length > 30 ? '...' : ''));
          } catch (error) {
            console.error('::error::' + error.message);
            process.exit(1);
          }
        "

    - name: commit changes
      if: success()
      run: |
        git config --global user.name "Mariana Viana"
        git config --global user.email "marianaviana@users.noreply.github.com"
        git add .
        git commit -m "chore: update daily quote [$(date +'%Y-%m-%d')]" || \
          echo "::warning::no changes to commit"
        git push origin HEAD:${{ steps.set-branch.outputs.branch_name }} || \
          echo "::warning::push failed or branch already exists"

    - name: create pull request
      id: create-pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.MY_PERSONAL_TOKEN }}
        commit-message: "chore: update daily quote [$(date +'%Y-%m-%d')]"
        title: "chore: daily quote update"
        body: |
          automatic update of the motivational phrase of the day.

          **quote:** "${{ steps.get-quote.outputs.quote }}"
          **date:** $(date +'%Y-%m-%d')
        branch: ${{ steps.set-branch.outputs.branch_name }}
        base: main
        delete-branch: true
        labels: "automated"

  auto-merge:
    needs: update-phrase-and-pr
    runs-on: ubuntu-latest
    steps:
    - name: Wait for PR to be ready
      run: sleep 10

    - name: Auto-merge PR
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.MY_PERSONAL_TOKEN }}
        script: |
          try {
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: context.repo.owner + ':daily-update-' + new Date().toISOString().split('T')[0]
            });

            if (prs.data.length === 0) {
              console.log('No PR found for today');
              return;
            }

            const prNumber = prs.data[0].number;

            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'merge',
              commit_title: "chore: merge daily quote update [$(date +'%Y-%m-%d')]",
              commit_message: 'auto merge'
            });
          } catch (error) {
            console.error('Auto-merge failed:', error);
            core.setFailed('Failed to auto-merge PR');
          }